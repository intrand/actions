---
name: ${{ github.repository }}

on: push
# on:
#   push:
#     tags:
#       - "*" # triggers on all new tags

permissions:
  contents: write
  packages: write

jobs:
  get_info:
    runs-on: ubuntu-latest
    env:
      TZ: UTC0
    outputs:
      date: ${{ steps.get_date.outputs.date }}
      go_version: ${{ steps.get_go_version.outputs.go_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: get_date
        run: echo "::set-output name=date::$(git show -s --format=%cdZ --date=format-local:'%Y-%m-%dT%H:%M:%S')" # eg, 2022-01-28T16:21:36Z

      - id: get_go_version
        run: echo "::set-output name=go_version::$(grep 'go ' ./go.mod | cut -d' ' -f2)" # eg, 2022-01-28T16:21:36Z

  show:
    needs: date
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{needs.get_info.outputs.go_version}}

  buildx:
    if: ${{ false }}
    needs: get_info
    runs-on: ubuntu-latest

    env:
      DOCKER_CLI_EXPERIMENTAL: enabled

    steps:
      - name: set up qemu
        uses: docker/setup-qemu-action@v1

      - name: set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          build-args: |
            Version=${{ github.ref_name }}
            Commit=${{ github.sha }}
            CommitDate=${{ needs.get_info.outputs.date }}
            Builder=github.com/docker/build-push-action

  goreleaser:
    if: ${{ false }}
    needs: buildx
    runs-on: ubuntu-latest

    env:
      orgrepo: ${{ github.repository }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup-go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: goreleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
